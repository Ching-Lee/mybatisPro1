<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org/DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!--namespace命名空间，作用就是对sql进行分类化管理，理解sql隔离
注：使用mapper代理方法开发，namespace有特殊作用
-->

<mapper namespace="com.chinglee.mybatis.mapper.OrderCustomMapper">
    <!--查询订单关联查询用户信息-->
    <select id="findOrdersUser"  resultType="com.chinglee.mybatis.pojo.OrderCustom">
        SELECT orders.* ,user.username,user.sex,user.address
         FROM orders,user
        WHERE orders.user_id=user.id
    </select>





    <!--订单关联查询用户的resultMap-->
    <resultMap id="OrdersUserResultMap" type="com.chinglee.mybatis.pojo.Orders">
        <!-- 配置映射的订单信息-->
        <!--指定查询列中的唯一标识，订单信息中的唯一标识，如果有多个列组成唯一标识，配置多个id
            column:订单信息的唯一标识列
            property:订单信息的唯一标识列所映射到Orders中的那个属性
         -->
        <id column="id" property="id"/>
        <result column="user_id" property="userId"/>
        <result column="number" property="number"/>
        <result column="createtime" property="createtime"/>
        <result column="note" property="note"/>
        <!--配置映射关联的用户信息-->
        <!-- association:用于映射关联查询对象的信息
           property:要将关联查询的用户信息映射到Orders中的那个属性
        -->
        <association property="user" javaType="com.chinglee.mybatis.pojo.User">
            <!-- id:关联查询用户的唯一标识
            唯一标识用户信息的列
            -->
            <id column="user_id" property="id"/>
            <result column="username" property="username"/>
            <result column="sex" property="sex"/>
            <result column="address" property="address"/>

        </association>

    </resultMap>


    <!-- 订单关联查询用户及订单明细
         继承了单关联查询用户的resultMap
         就不需要再写订单信息和用户信息的映射了
    -->
    <resultMap id="OrdersAndOrderDetailResultMap" type="com.chinglee.mybatis.pojo.Orders" extends="OrdersUserResultMap">
        <collection property="orderDetails" ofType="com.chinglee.mybatis.pojo.OrderDetail">
            <id column="orderdetail_id" property="id"/>
            <result column="items_id" property="itemsId"/>
            <result column="items_num" property="itemsNum"/>
            <result column="orders_id" property="ordersId"/>

        </collection>
    </resultMap>



    <resultMap id="UserAndItemsResultMap" type="com.chinglee.mybatis.pojo.User">
        <id column="username" property="username"/>
        <result column="sex" property="sex"/>
        <result column="address" property="address"/>
        <!-- 一个用户多个订单-->
        <collection property="ordersList" ofType="com.chinglee.mybatis.pojo.Orders">
           <id column="id" property="id"/>
            <result column="user_id" property="userId"/>
            <result column="number" property="number"/>
            <result column="createtime" property="createtime"/>
            <result column="note" property="note"/>
            <!--一个订单多个明细-->
            <collection property="orderDetails" ofType="com.chinglee.mybatis.pojo.OrderDetail">
                <id column="orderdetail_id" property="id"/>
                <result column="items_id" property="itemsId"/>
                <result column="items_num" property="itemsNum"/>
                <result column="orders_id" property="ordersId"/>
                <!--一个明细对应一个商品-->
                <association property="items" javaType="com.chinglee.mybatis.pojo.Items">
                    <id column="items_id" property="id"/>
                    <result column="items_name" property="name"/>
                    <result column="items_pic" property="pic"/>
                    <result column="items_price" property="price"/>
                </association>
            </collection>
        </collection>

    </resultMap>



    <!--查询订单关联查询用户信息,使用resultMap-->
    <select id="OrdersUserResultMap" resultMap="OrdersUserResultMap">
        SELECT orders.* ,user.username,user.sex,user.address
        FROM orders,user
        WHERE orders.user_id=user.id
    </select>

    <!--查询订单关联查询用户及订单明细,使用resultMap-->
    <select id="findOrdersAndOrderDetailResultMap"  resultMap="OrdersAndOrderDetailResultMap">
        SELECT orders.* ,user.username,user.sex,user.address,orderdetail.id orderdetail_id,orderdetail.items_id,
          orderdetail.items_num,orderdetail.orders_id
         FROM orders,user,orderdetail
        WHERE orders.user_id=user.id and orderdetail.orders_id=orders.id
    </select>

    <!--查询用户及购买的商品信息，使用resultMap-->
    <select id="findUserAndItemsResultMap" resultMap="UserAndItemsResultMap">
        SELECT orders.* ,
	            user.username,
	            user.sex,
	            user.address,
	            orderdetail.id orderdetail_id,
	            orderdetail.items_id,
	            orderdetail.items_num,
	            orderdetail.orders_id,
	            items.name items_name,
	            items.pic items_pic,
	            items.price items_price

        FROM orders,user,orderdetail,items
        WHERE orders.user_id=user.id
              and orderdetail.orders_id=orders.id
              AND orderdetail.items_id=items.id
    </select>




    <!-- 查询订单关联查询用户、用户信息需要延迟加载-->
    <select id="findOrdersUserLazyLoading" resultMap="OrdersUserLazyLoadingResultMap">
        SELECT * FROM orders
    </select>
    <resultMap id="OrdersUserLazyLoadingResultMap" type="com.chinglee.mybatis.pojo.Orders">
        <id column="id" property="id"/>
        <result column="number" property="number"/>
        <result column="createtime" property="createtime"/>
         <!-- 实现对用户的延时加载
             colunm:订单中关联用户的查询的列
          -->
        <association property="user" javaType="com.chinglee.mybatis.pojo.User" select="com.chinglee.mybatis.mapper.UserMapper.findUserById" column="user_id">

        </association>
    </resultMap>

</mapper>